name: Docker Build Push Release


on:
  push:
    tags: [ 'v*' ]
  workflow_dispatch:
    inputs:
      version:
        description: 'ÊâãÂä®ËæìÂÖ•ÁâàÊú¨Âè∑ (Â¶Ç 1.2.3)'
        required: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    outputs:
      image-version: ${{ steps.version.outputs.version }}

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v4

      - name: üîß Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: üîë Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: üìã Determine version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.custom_version }}"
          else
            VERSION="${GITHUB_REF_NAME#v}"  # ÂéªÊéâ tag ÂâçÈù¢ÁöÑ v
          fi
          echo "Using version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: üî® Build & Push (Method2)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile-multistage-alt
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          labels: |
            org.opencontainers.image.title=${{ github.repository }}
            org.opencontainers.image.version=${{ steps.version.outputs.version }}
            org.opencontainers.image.source=${{ github.repository }}

  release:
    needs: build-and-push
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v4

      - name: üìù Prepare release notes
        id: notes
        run: |
          if [ -f changelog.md ]; then
            BODY="$(cat changelog.md)"
          else
            BODY=""
          fi
          echo "body<<EOF" >> $GITHUB_OUTPUT
          echo "$BODY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: üè∑Ô∏è Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.build-and-push.outputs.image-version }}
          name: Release v${{ needs.build-and-push.outputs.image-version }}
          body: ${{ steps.notes.outputs.body }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
