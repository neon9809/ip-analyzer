name: Docker Build & Release

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 0.1.6)'
        required: true
        default: ''

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set-version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Determine version
        id: set-version
        run: |
          if [ "${{ github.event_name }}" == "push" ]; then
            COMMIT_MSG=$(git log -1 --pretty=%B)
            if [[ $COMMIT_MSG =~ ^v(.*) ]]; then
              VERSION="${BASH_REMATCH[1]}"
            else
              echo "Commit message does not start with v, skipping build."
              exit 0
            fi
          else
            VERSION="${{ github.event.inputs.version }}"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push multi-arch Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ steps.set-version.outputs.version }}

      - name: Create GitHub Release
        id: release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.set-version.outputs.version }}
          name: ${{ steps.set-version.outputs.version }}
          body: |
            $(if [ -f changelog.md ]; then cat changelog.md; else echo ""; fi)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

