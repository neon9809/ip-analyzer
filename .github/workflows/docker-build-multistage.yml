name: Docker Build & Release

on:
  push:
    # 仅当 commit message 包含 vX.Y.Z 时触发
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build (e.g., v0.1.6)'
        required: false
        default: ''

jobs:
  docker:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
    env:
      IMAGE_NAME: ${{ github.repository }}
      REGISTRY: ghcr.io

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Determine version
        id: version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ] && [ -n "${{ github.event.inputs.version }}" ]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          else
            # 从 tag 或 commit message 提取版本号
            VERSION=$(git log -1 --pretty=%B | grep -o 'v[0-9]\+\.[0-9]\+\.[0-9]\+')
            if [ -z "$VERSION" ]; then
              echo "No version found in commit message. Use workflow_dispatch input."
              exit 1
            fi
            echo "VERSION=$VERSION" >> $GITHUB_ENV
          fi
          echo "Version: $VERSION"

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          build-args: |
            # 可根据需要传递额外 build-arg
            VERSION=${{ env.VERSION }}

  release:
    name: Create GitHub Release
    needs: docker
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Determine version
        id: get_version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ] && [ -n "${{ github.event.inputs.version }}" ]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          else
            VERSION=$(git log -1 --pretty=%B | grep -o 'v[0-9]\+\.[0-9]\+\.[0-9]\+')
            if [ -z "$VERSION" ]; then
              echo "No version found in commit message. Use workflow_dispatch input."
              exit 1
            fi
            echo "VERSION=$VERSION" >> $GITHUB_ENV
          fi
          echo "Version: $VERSION"

      - name: Read changelog
        id: changelog
        run: |
          if [ -f changelog.md ]; then
            echo "BODY<<EOF" >> $GITHUB_ENV
            cat changelog.md >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
          else
            echo "BODY=" >> $GITHUB_ENV
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION }}
          name: ${{ env.VERSION }}
          body: ${{ env.BODY }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
