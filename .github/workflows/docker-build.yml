name: Docker Build & GHCR Release

on:
  push:
    branches:
      - main

jobs:
  docker_build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    outputs:
      image_tag: ${{ steps.set_version.outputs.version }}

    steps:
      # 1. Checkout
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. 设置版本号: 从 commit message 或手动输入
      - name: Extract version
        id: set_version
        run: |
          # 尝试从 commit message 提取 vX.Y.Z
          COMMIT_MSG=$(git log -1 --pretty=%B)
          if [[ "$COMMIT_MSG" =~ v([0-9]+\.[0-9]+\.[0-9]+) ]]; then
            VERSION="${BASH_REMATCH[1]}"
          else
            echo "No version found in commit message, using '0.0.0'"
            VERSION="0.0.0"
          fi
          echo "Detected version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      # 3. Log in to GHCR
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 4. Set up QEMU for multi-arch builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # 5. Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 6. Build and push multi-platform image
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ github.repository }}:${{ steps.set_version.outputs.version }}
            ghcr.io/${{ github.repository }}:latest
          build-args: |
            VERSION=${{ steps.set_version.outputs.version }}
          labels: |
            org.opencontainers.image.version=${{ steps.set_version.outputs.version }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.source=${{ github.repositoryUrl }}

      # 7. Create GitHub Release
      - name: Create GitHub Release
        id: release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.set_version.outputs.version }}
          name: Release v${{ steps.set_version.outputs.version }}
          body: ${{ github.workspace }}/changelog.md
        if: ${{ steps.set_version.outputs.version != '0.0.0' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
